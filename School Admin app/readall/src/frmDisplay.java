
import java.io.BufferedReader;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.io.PrintWriter;
import java.util.Calendar;
import javax.swing.JOptionPane;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author  DENZEL T Chikaka
 * date 20 November 2018
 */
public class frmDisplay extends javax.swing.JFrame {

    /**
     * Creates new form frmDisplay
     */
    public frmDisplay() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        txtARdisplay = new java.awt.TextArea();
        jLabel1 = new javax.swing.JLabel();
        btnBack = new javax.swing.JButton();
        btnRead = new javax.swing.JButton();
        btnCompute = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("N.B - TBA (To Be Advised)");

        btnBack.setText("<<BACK");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });

        btnRead.setText("Read All");
        btnRead.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnReadActionPerformed(evt);
            }
        });

        btnCompute.setText("Compute");
        btnCompute.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnComputeActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnBack)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(btnCompute, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnRead, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(txtARdisplay, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addContainerGap())
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 549, Short.MAX_VALUE)
                        .addComponent(jLabel1)
                        .addGap(52, 52, 52))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(8, 8, 8)
                        .addComponent(txtARdisplay, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnBack)
                        .addGap(143, 143, 143)
                        .addComponent(btnRead, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(91, 91, 91)
                        .addComponent(btnCompute, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 120, Short.MAX_VALUE)))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

int Accfees = 300;//Accounting current fees  
int AccNfees = (int) ((Accfees*0.07)+Accfees);// Accounting new fees after increment 
int AccfeeTot = (Accfees*2) + (AccNfees*4);



int ITfees = 200;// Infomation Technology current
 int ITNfees = (int) (ITfees+(ITfees*0.055));//Infomation Technology  new fees after increment 
int ITfeeTot = (ITfees*2) +ITNfees ;


int Netwfees = 400;// Networking current fees 
int NetwNfees =(int) (Netwfees + (Netwfees*0.1));// Networking fees after increment
int NetwfeeTot = (Netwfees*2)+ (NetwNfees*4);

int BusAdfees = 300;// Business Administration current fees 
int BusAdNfees = (int) (BusAdfees+(BusAdfees*0.09));// Business Administration fees after increment
int BusAdfeeTot = (BusAdfees*2)  + (BusAdNfees*4);


int CSfees= 400; // Computer Science current fees  
int CSNfees = (int) (CSfees+(CSfees*0.08));//Computer Science fees after increment
int CSfeeTot = (CSfees*2)+ (CSNfees*4);

		//Counters for total numbers
	int ITcount = 0;// used to count number of studens doing Information Technology 
	int NETWcount =0;// used to count number of students doing Networking 
	int BUScount=0;// used to count number of students doing Business Administration
	int ACCcount = 0;// used to count number of students doing Accounting 
	int CScount = 0;// used to count number of students doing computer Science 
        int TotalSt = 0;
    private void btnComputeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnComputeActionPerformed
        txtARdisplay.setText("");// clears the Text Area
        txtARdisplay.append("ID\t\tName\t\t\tCourse\t\t\t\t1st two\t\tNew Course\tTotal Course"
                                    + "\n\t\t\t\t\t\t\t\t\tMths Fees\tFees\t\tFees"
                                    + "\n______________________________________________________________________________________________________________");
        
         String Details = ""; // used to carry information read from file 
         try (BufferedReader br = new BufferedReader(new FileReader("students.txt"))) {
        
         
         while ((Details = br.readLine()) != null) {
             //*********************creating and writing to file ("later.txt")***************************
             if (Details.contains("Graphic Design")||Details.contains("Financial Management")||Details.contains("Travel & Tourism")||Details.contains("Marketing")){
                        try {   
                               FileWriter fwrtr = new FileWriter("later.txt",true);

                                   try (PrintWriter pwrtr = new PrintWriter(fwrtr)) {


                                       pwrtr.println(Details); //print line with details into  the file "later.txt" 
                                       pwrtr.close();

                                  

                                   throw new FileNotFoundException (); //throws file not found exception
                               }
                                   
                          }   catch(FileNotFoundException fileNotFoundException) // catches file not found thrown exception 
                        {
                           // JOptionPane.showMessageDialog(null,"\"An error eccoured writing to file .\"");// displays exception notification message 
                        } 
                        
                         //JOptionPane.showMessageDialog(null,"Details Saved to File - 'later.txt' ");   
                        
                }//end if 
             //*************************************************************************************************************************************
           
                
             
             
             // **********checks if course is Financial Management 
                 if (Details.contains("Financial Management")){
                txtARdisplay.append(Details+"\t\tTBA\t\tTBA\t\tTBA\n");

                 }
             //***************************************************************************************
             
             //*********************** checks if course is Travel &Tourism or Graphic Design or Marketing and adds info 
                if (Details.contains("Travel & Tourism")||Details.contains("Graphic Design")||Details.contains("Marketing")){
                txtARdisplay.append(Details+"\t\t\tTBA\t\tTBA\t\tTBA\n");
                
               }
              //***********************************************************************************************************  
                
              // **********checks if course is Accounting , adds the fee info to the student details and displays 
               if (Details.contains("Accounting")){
                txtARdisplay.append(Details+"\t\t\t"+Accfees+"\t\t"+AccNfees+"\t\t"+AccfeeTot+"\n");
                 ACCcount++;//add to the number of Accounting students
                 TotalSt++;// add to total number of students for this intake 
               }
               //*********************************************************************************************************** 
               
               
                // **********checks if course is Information Technology , adds the fee info to the student details and displays 
               if (Details.contains("Information Technology")){
                 txtARdisplay.append(Details+"\t\t"+ITfees+"\t\t"+ITNfees+"\t\t"+ITfeeTot+"\n");
                ITcount++;//add to the number of Information Technology students
                TotalSt++;// add to total number of students for this intake 
               }
               //*************************************************************************************************************
               
                 // **********checks if course is Business Administration , adds the fee info to the student details and displays 
               if (Details.contains("Business Administration")){
                 txtARdisplay.append(Details+"\t\t"+BusAdfees+"\t\t"+BusAdNfees+"\t\t"+BusAdfeeTot+"\n");
                 BUScount++;//add to the number of Business Administration students
                 TotalSt++;// add to total number of students for this intake 
               }
                //*********************************************************************************************************************
               
                 // **********checks if course is Networking , adds the fee info to the student details and displays 
               if (Details.contains("Networking")){
                 txtARdisplay.append(Details+"\t\t\t"+Netwfees+"\t\t"+NetwNfees+"\t\t"+NetwfeeTot+"\n");
                NETWcount++;//add to the number of Networking students
                TotalSt++;// add to total number of students for this intake 
               }
               //***********************************************************************************************************************
               
               
                // **********checks if course is Computer Science , adds the fee info to the student details and displays 
               if (Details.contains("Computer Science")){
                 txtARdisplay.append(Details+"\t\t"+CSfees+"\t\t"+CSNfees+"\t\t"+CSfeeTot+"\n");
                CScount++;//add to the number of Computer Science students
                TotalSt++;// add to total number of students for this intake 
               }

              
         }//end of while loop
      } catch (IOException e) {
         e.printStackTrace();
      }
      
      //*********************************** Displaying the Totals on theText Area************************************************** 
      
      int Totalfeescombined = (ITcount*ITfeeTot)+(NETWcount*NetwfeeTot)+(BUScount*BusAdfeeTot)+(ACCcount*AccfeeTot)+(CScount*CSfeeTot);
       txtARdisplay.append("\n\nTotal Information Technology students: \t"+ITcount+"\tTotal Fees: "+(ITcount*ITfeeTot)
                            +"\nTotal Networking Students:\t\t "+NETWcount+"\tTotal Fees:"+(NETWcount*NetwfeeTot)
                            +"\nTotal Business Administration Students: \t"+BUScount+"\tTotal Fees: "+(BUScount*BusAdfeeTot)
                            +"\nTotal Accounting Students:\t\t"+ACCcount+"\tTotal Fees: "+(ACCcount*AccfeeTot)
                            +"\nTotal Computer Science Students:\t\t"+ CScount+"\tTotal Fees: "+(CScount*CSfeeTot)
                            +"\n\nTotal Students for this intake : "+TotalSt+"\t\t\tTotal Fees: "+Totalfeescombined
                            );
      txtARdisplay.append("\n*************************************************************************************************************************************"
                            + "\n            Written By <Denzel Chikaka> <20 November 2018> <16:32>"
                            + "\n************************************************************************************************************************************");
      
    JOptionPane.showMessageDialog(null,"Details Saved to File - 'later.txt' ");
        
        
       
     
    }//GEN-LAST:event_btnComputeActionPerformed

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
       this.setVisible(false);
      new frmMain().setVisible(true);
    }//GEN-LAST:event_btnBackActionPerformed

    private void btnReadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnReadActionPerformed
         txtARdisplay.setText("");// clears the Text Area
        
        String readall = "";// used to carry student details read from file 
        try (BufferedReader br = new BufferedReader(new FileReader("students.txt"))) {
        
         
         while ((readall = br.readLine()) != null) {
                
                    txtARdisplay.append(readall+"\n");
                    
              }//end of while loop
      } catch (IOException e) {
         e.printStackTrace();
      }
         
    }//GEN-LAST:event_btnReadActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(frmDisplay.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(frmDisplay.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(frmDisplay.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(frmDisplay.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new frmDisplay().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnCompute;
    private javax.swing.JButton btnRead;
    private javax.swing.JLabel jLabel1;
    private java.awt.TextArea txtARdisplay;
    // End of variables declaration//GEN-END:variables
}
